#include<stdio.h>
#include<stdlib.h>

void push();
void pop();
void search();
void display();

struct node
{
	int data;
	struct node *next;
}*next=NULL;

struct node *top=NULL;

int main()
{
        int ch;
	do
	{
		printf("\n_______");
		printf("\n\t MENU");
		printf("\n\t_______");
		printf("\n\t 1.PUSH");
		printf("\n\t 2.POP");
		printf("\n\t 3.SEARCH");
		printf("\n\t 4.DISPLAY");
		printf("\n\t 5.EXIT");
		printf("\n Enter your option\n:");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1:	push();
		       		break;
			case 2:	pop();
		       		break;
			case 3: search();
				break;
			case 4:	display();
		       		break;
			case 5:	printf("EXIT");
		       		break;

			default:printf("\n ivalid option....\n");
				break;
		}
	}while(ch!=5);
}

void push()
{
	int val;
	struct node *newnode=(struct node*)malloc(sizeof(struct node));
	if(newnode==NULL)
	{
		printf("OVERFLOW");
	}
	else
	{
		printf("Enter value for push");
        	scanf("%d",&val);
	
		newnode->data=val;
		newnode->next=NULL;

		newnode->next=top;
		top=newnode;
	}
	printf("PUSHED ELEMENT");

}

 void pop()
	{
		int item;
		struct node *ptr;
	if(top==NULL)
	{
		printf("OVERFLOW---");
	}
		else
	{
		item=top->data;
		ptr=top;
		top=top->next;
		free(ptr);
		printf("\n%d POPPED",item);
	}
	}
void search()
	{
		int val;
		printf("Enter the element to search");
		scanf("%d",&val);
		struct node *temp=top;
		int pos=0;
		while(temp!=NULL)
	{
		if(temp->data==val)
	{
		printf("\n%d was found at position %d",val,pos);
		return;
	}
		temp=temp->next;
		pos++;
	}
		printf("%d was not found",val);
}

void display()
{
	int i;
	struct node *ptr;
	ptr=top;
	if(ptr==NULL)
	{
		printf("Stack is empty");
	}
	else
	{
		printf("\t stack\n\t****\n");

		while(ptr!=NULL)
		{
			printf("\t %d\n",ptr->data);
			ptr=ptr->next;
		}
	}
}
